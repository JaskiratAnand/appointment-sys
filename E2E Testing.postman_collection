{
	"info": {
		"_postman_id": "c0fb9611-aff4-49b3-8ca6-0ff8b0deaa53",
		"name": "E2E Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33841984"
	},
	"item": [
		{
			"name": "Creating Professors and Students",
			"item": [
				{
					"name": "Professor1 SignUp",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Response status code is 201\", function () {\r",
									"  pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body has a token property\", function () {\r",
									"  pm.expect(pm.response.json()).to.have.property('token');\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"pm.environment.set(\"professor1_token\", jsonData.token);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.set(\"base_url\", \"http://localhost:3000\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"professor_1\",\r\n    \"email\": \"professor_1@example.com\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/professor/signup",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"professor",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Student1 SignUp",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Response status code is 201\", function () {\r",
									"  pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body has a token property\", function () {\r",
									"  pm.expect(pm.response.json()).to.have.property('token');\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"pm.environment.set(\"student1_token\", jsonData.token);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"student_1\",\r\n    \"email\": \"student_1@example.com\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/student/signup",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"student",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Student2 SignUp",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Response status code is 201\", function () {\r",
									"  pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body has a token property\", function () {\r",
									"  pm.expect(pm.response.json()).to.have.property('token');\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"pm.environment.set(\"student2_token\", jsonData.token);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"student_2\",\r\n    \"email\": \"student_2@example.com\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/student/signup",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"student",
								"signup"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create Timeslots",
			"item": [
				{
					"name": "Professor1 SignIn",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body has a token property\", function () {\r",
									"  pm.expect(pm.response.json()).to.have.property('token');\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"pm.environment.set(\"professor1_token\", jsonData.token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"professor_1@example.com\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/professor/signin",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"professor",
								"signin"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Timeslot T1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Response status code is 201\", function () {\r",
									"  pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body has a token property\", function () {\r",
									"  pm.expect(pm.response.json()).to.have.property('timeslotId');\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"pm.environment.set(\"timeslot1_id\", jsonData.timeslotId);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{professor1_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"startTime\": \"2025-01-25T11:00:00Z\",\r\n    \"endTime\": \"2025-01-25T11:20:00Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/timeslots",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeslots"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Timeslot T2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Response status code is 201\", function () {\r",
									"  pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body has a token property\", function () {\r",
									"  pm.expect(pm.response.json()).to.have.property('timeslotId');\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"pm.environment.set(\"timeslot2_id\", jsonData.timeslotId);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{professor1_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"startTime\": \"2025-01-25T11:30:00Z\",\r\n    \"endTime\": \"2025-01-25T11:50:00Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/timeslots",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeslots"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Timeslot T3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Response status code is 201\", function () {\r",
									"  pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body has a token property\", function () {\r",
									"  pm.expect(pm.response.json()).to.have.property('timeslotId');\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"pm.environment.set(\"timeslot3_id\", jsonData.timeslotId);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{professor1_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"startTime\": \"2025-01-25T12:00:00Z\",\r\n    \"endTime\": \"2025-01-25T12:20:00Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/timeslots",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeslots"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create Appointments",
			"item": [
				{
					"name": "Student1 SignIn",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body has a token property\", function () {\r",
									"  pm.expect(pm.response.json()).to.have.property('token');\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"pm.environment.set(\"student1_token\", jsonData.token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"student_1@example.com\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/student/signin",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"student",
								"signin"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Professor1 ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body has a token property\", function () {\r",
									"  pm.expect(pm.response.json()).to.have.property('professors');\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"jsonData.professors.map((p) => {\r",
									"    if (p.name === \"professor_1\") {\r",
									"        pm.environment.set(\"professor1_id\", p.id);\r",
									"    }\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/professor",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"professor"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Timeslots Student1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body has a token property\", function () {\r",
									"  pm.expect(pm.response.json()).to.have.property('professorId');\r",
									"});\r",
									"pm.test(\"Response body has a token property\", function () {\r",
									"  pm.expect(pm.response.json()).to.have.property('timeslots');\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"pm.environment.set(\"timeslot1_id\", jsonData.timeslots[0].id);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{student1_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/timeslots/{{professor1_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeslots",
								"{{professor1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Appointment Student1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.get(\"timeslot1_id\");\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 201\", function () {\r",
									"  pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body has a token property\", function () {\r",
									"  pm.expect(pm.response.json()).to.have.property('appointmentId');\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"pm.environment.set(\"std1-appointment_id\", jsonData.appointmentId);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{student1_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"timeSlotId\": \"{{timeslot1_id}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/appointment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"appointment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Student2 SignIn",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body has a token property\", function () {\r",
									"  pm.expect(pm.response.json()).to.have.property('token');\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"pm.environment.set(\"student2_token\", jsonData.token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"student_2@example.com\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/student/signin",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"student",
								"signin"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Timeslots Student2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body has a token property\", function () {\r",
									"  pm.expect(pm.response.json()).to.have.property('professorId');\r",
									"});\r",
									"pm.test(\"Response body has a token property\", function () {\r",
									"  pm.expect(pm.response.json()).to.have.property('timeslots');\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"pm.environment.set(\"timeslot2_id\", jsonData.timeslots[0].id);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{student2_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/timeslots/{{professor1_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeslots",
								"{{professor1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Appointment Student2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.get(\"timeslot1_id\");\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 201\", function () {\r",
									"  pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body has a token property\", function () {\r",
									"  pm.expect(pm.response.json()).to.have.property('appointmentId');\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"pm.environment.set(\"std2-appointment_id\", jsonData.appointmentId);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{student2_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"timeSlotId\": \"{{timeslot2_id}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/appointment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"appointment"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cancel Appointment",
			"item": [
				{
					"name": "Professor1 SignIn",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body has a token property\", function () {\r",
									"  pm.expect(pm.response.json()).to.have.property('token');\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"pm.environment.set(\"professor1_token\", jsonData.token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"professor_1@example.com\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/professor/signin",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"professor",
								"signin"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Student1 ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body has a token property\", function () {\r",
									"  pm.expect(pm.response.json()).to.have.property('students');\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"jsonData.students.map((s) => {\r",
									"    if (s.name === \"student_1\") {\r",
									"        pm.environment.set(\"student1_id\", s.id);\r",
									"    }\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/student",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"student"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Professor Appointments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body has a token property\", function () {\r",
									"  pm.expect(pm.response.json()).to.have.property('appointments');\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"jsonData.appointments.map((a) => {\r",
									"    if (a.studentId === pm.environment.get(\"student1_id\")) {\r",
									"        pm.environment.set(\"appointment1_id\", a.id);\r",
									"    }\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{professor1_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/appointment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"appointment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel Appointment",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{professor1_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/appointment/{{appointment1_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"appointment",
								"{{appointment1_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Check Appointments",
			"item": [
				{
					"name": "Student1 SignIn",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body has a token property\", function () {\r",
									"  pm.expect(pm.response.json()).to.have.property('token');\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"pm.environment.set(\"student1_token\", jsonData.token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"student_1@example.com\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/student/signin",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"student",
								"signin"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Appointments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{student1_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/appointment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"appointment"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}